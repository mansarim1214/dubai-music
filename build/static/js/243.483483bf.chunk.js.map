{"version":3,"file":"static/js/243.483483bf.chunk.js","mappings":"gLAIA,MA6EA,EA7EmBA,IAAqB,IAApB,WAAEC,GAAYD,EAChC,MAAOE,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAEnCK,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAKMC,SALiBC,EAAAA,EAAMC,IAC3B,8CAI+BC,KAAKC,QACnCC,GAA2B,cAAjBA,EAAMC,SAGnBd,EAAUQ,GACVL,GAAW,EACb,CAAE,MAAOC,GACPW,QAAQX,MAAM,uBAAwBA,GACtCC,EAAS,mDACTF,GAAW,EACb,GAGFa,EAAW,GACV,IAUH,OAAIZ,GAAca,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAEf,KAGhDgB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iBAAgBC,SAAC,kBAC/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvBpB,EAAOsB,KAAKR,IACXI,EAAAA,EAAAA,KAAA,OAEEC,UAAU,YACVI,MAAO,CACLC,UAAW,SACXC,QAAS,QAEXC,QAASA,IAtBAZ,KACff,GACFA,EAAW,gBAAgBe,EAAMa,MACnC,EAmByBC,CAAYd,GAAOM,UAElCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OACEW,IACEf,EAAMgB,cACF,8BAAoChB,EAAMgB,gBAC1C,mBAENC,IAAKjB,EAAMkB,KACXC,MAAM,OACN9B,QAAQ,UAEVe,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,WAAUC,SAAEN,EAAMkB,aApB/BlB,EAAMa,aA2Bf,C","sources":["components/View/MusicStore.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./frontend.css\";\r\n\r\nconst MusicStore = ({ onNavigate }) => {\r\n  const [stores, setStores] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/api/musicstore`\r\n        );\r\n\r\n        // Filter only published stores\r\n        const publishedStores = response.data.filter(\r\n          (store) => store.status === \"published\"\r\n        );\r\n\r\n        setStores(publishedStores);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setError(\"Failed to fetch stores. Please try again later.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  const handleClick = (store) => {\r\n    if (onNavigate) {\r\n      onNavigate(`/music-store/${store._id}`);\r\n    }\r\n  };\r\n\r\n \r\n  if (error) return <div className=\"error-message\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"bg-custom\">\r\n      <h2 className=\"my-2 fav-title\">Music Stores</h2>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"storeGrid\">\r\n          {stores.map((store) => (\r\n            <div\r\n              key={store._id}\r\n              className=\"storeCard\"\r\n              style={{\r\n                textAlign: \"center\",\r\n                padding: \"10px\",\r\n              }}\r\n              onClick={() => handleClick(store)} \r\n            >\r\n              <div className=\"storeImage\">\r\n                <img\r\n                  src={\r\n                    store.featuredImage\r\n                      ? `${process.env.REACT_APP_API_URL}/${store.featuredImage}`\r\n                      : \"/placeholder.png\"\r\n                  }\r\n                  alt={store.name}\r\n                  width=\"100%\"\r\n                  loading=\"lazy\"\r\n                />\r\n                <div className=\"storeContent\">\r\n                  <h4 className=\"artTitle\">{store.name}</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MusicStore;\r\n"],"names":["_ref","onNavigate","stores","setStores","useState","loading","setLoading","error","setError","useEffect","async","publishedStores","axios","get","data","filter","store","status","console","fetchData","_jsx","className","children","_jsxs","map","style","textAlign","padding","onClick","_id","handleClick","src","featuredImage","alt","name","width"],"sourceRoot":""}