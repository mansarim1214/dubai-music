{"version":3,"file":"static/js/484.19f6cb5e.chunk.js","mappings":"oMASAA,EAAAA,GAAKC,eAAeC,EAAAA,GAEpB,MAkHA,EAlHsBC,IAAqB,IAApB,WAAEC,GAAYD,EACnC,MAAOE,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAC7BK,GAAeC,EAAAA,EAAAA,QAAO,KAE5BC,EAAAA,EAAAA,YAAU,KACeC,WACrB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,4CACjCZ,EAAiBU,EAASG,KAC5B,CAAE,MAAOT,GACPC,EAAS,sDACTS,QAAQV,MAAM,4BAA6BA,EAC7C,CAAC,QACCD,GAAW,EACb,GAGFY,EAAgB,GACf,IA6BH,OAAIb,GAAgBc,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,SAAC,eACzCd,GAAcY,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAEd,KAGhDY,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UAExBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iBAAgBC,SAAC,wBAC/BF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC7BF,EAAAA,EAAAA,KAAA,OACEC,UAAU,cACVG,IAAMC,GAAQf,EAAagB,QAAQ,GAAKD,EACxCE,MAAO,CACLC,QAAS,OACTC,SAAU,SACVC,MAAO,QACPR,SAEDnB,EAAc4B,KAAKC,IAClBZ,EAAAA,EAAAA,KAAA,OAEEC,UAAU,cACVM,MAAO,CAAEM,KAAM,aAAcC,QAAS,SAAUZ,UAEhDF,EAAAA,EAAAA,KAAA,OAAKe,QAASA,IAjCXH,KACf9B,GACFA,EAAW,6BAA6B8B,EAAKI,MAC/C,EA8BoCC,CAAYL,GAAMV,UACpCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,CACzBU,EAAKM,eACJlB,EAAAA,EAAAA,KAAA,OACEmB,IAAK,8BAAoCP,EAAKM,gBAC9CE,IAAKR,EAAKS,MACVX,MAAM,OACNxB,QAAQ,UAGVc,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAEhBW,EAAKU,QACJtB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUC,SAAC,oBAE7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACzBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,WAAUC,SAAEU,EAAKS,gBApBhCT,EAAKI,mBAsCpB,C","sources":["components/View/IntroducingSeries.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { gsap } from \"gsap\";\nimport { Draggable } from \"gsap/Draggable\";\nimport { BsChevronCompactRight, BsChevronCompactLeft } from \"react-icons/bs\";\nimport WelcomeModal from \"./WelcomeModal\";\nimport { Link } from \"react-router-dom\";\nimport \"./frontend.css\";\n\ngsap.registerPlugin(Draggable);\n\nconst IntSeriesList = ({ onNavigate }) => {\n  const [intSeriesList, setIntSeriesList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const carouselRefs = useRef([]);\n\n  useEffect(() => {\n    const fetchIntSeries = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/intseries`);\n        setIntSeriesList(response.data);\n      } catch (error) {\n        setError(\"Failed to fetch IntSeries. Please try again later.\");\n        console.error(\"Error fetching IntSeries:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchIntSeries();\n  }, []);\n\n  const scrollCarousel = (direction, index) => {\n    const carousel = carouselRefs.current[index];\n    if (carousel) {\n      const item = carousel.querySelector(\".intImage\");\n      const itemWidth = item ? item.clientWidth : 0;\n      const scrollAmount = itemWidth * 3;\n\n      let newScrollPosition = carousel.scrollLeft + scrollAmount * direction;\n      newScrollPosition = Math.max(\n        0,\n        Math.min(newScrollPosition, carousel.scrollWidth - carousel.clientWidth)\n      );\n\n      gsap.to(carousel, {\n        scrollLeft: newScrollPosition,\n        duration: 0.5,\n        ease: \"power2.out\",\n      });\n    }\n  };\n\n  const handleClick = (item) => {\n    if (onNavigate) {\n      onNavigate(`/introducingseries-detail/${item._id}`);\n    }\n  };\n\n  if (loading) return <div className=\"loading\">Loading...</div>;\n  if (error) return <div className=\"error-message\">{error}</div>;\n\n  return (\n    <div className=\"bg-custom\">\n     \n      <div className=\"container-fluid p-0\">\n        <div className=\"category-wrapper\">\n          <h2 className=\"my-4 fav-title\">Introducing Series</h2>\n          <hr />\n          <div className=\"row\">\n            <div className=\"col p-relative\">\n              <div\n                className=\"intCarousel\"\n                ref={(el) => (carouselRefs.current[0] = el)}\n                style={{\n                  display: \"flex\",\n                  overflow: \"hidden\",\n                  width: \"100%\",\n                }}\n              >\n                {intSeriesList.map((item) => (\n                  <div\n                    key={item._id}\n                    className=\"artistImage\"\n                    style={{ flex: \"0 0 16.67%\", padding: \"0 5px\" }}\n                  >\n                    <div onClick={() => handleClick(item)}>\n                      <div className=\"artistImage\">\n                        {item.featuredImage ? (\n                          <img\n                            src={`${process.env.REACT_APP_API_URL}/${item.featuredImage}`}\n                            alt={item.title}\n                            width=\"100%\"\n                            loading=\"lazy\"\n                          />\n                        ) : (\n                          <div className=\"image-placeholder\"></div>\n                        )}\n                        {item.isNew && (\n                          <span className=\"newLabel\">Recently Added</span>\n                        )}\n                        <div className=\"artContent\">\n                          <h4 className=\"artTitle\">{item.title}</h4>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              {/* Optional Carousel Arrows (Uncomment if needed) */}\n              {/* <button className=\"arrow left\" onClick={() => scrollCarousel(-1, 0)}>\n                <BsChevronCompactLeft />\n              </button>\n              <button className=\"arrow right\" onClick={() => scrollCarousel(1, 0)}>\n                <BsChevronCompactRight />\n              </button> */}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default IntSeriesList;\n"],"names":["gsap","registerPlugin","Draggable","_ref","onNavigate","intSeriesList","setIntSeriesList","useState","loading","setLoading","error","setError","carouselRefs","useRef","useEffect","async","response","axios","get","data","console","fetchIntSeries","_jsx","className","children","_jsxs","ref","el","current","style","display","overflow","width","map","item","flex","padding","onClick","_id","handleClick","featuredImage","src","alt","title","isNew"],"sourceRoot":""}