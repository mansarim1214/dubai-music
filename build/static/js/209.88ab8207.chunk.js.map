{"version":3,"file":"static/js/209.88ab8207.chunk.js","mappings":"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","sources":["components/View/Banner.js","components/View/Venues.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport './frontend.css'; // Import CSS file\r\n\r\nconst Banner = () => {\r\n  const slides = [\r\n    \r\n    {\r\n      src: '/banner1.webp',\r\n      alt: 'Banner for Musicians',\r\n      text: 'Explore Dubaiâ€™s Top Musicians',\r\n      button: 'Explore Now',\r\n      url: '/musicians',\r\n    },\r\n   \r\n    {\r\n      src: '/dubai-opera.webp',\r\n      alt: 'Banner for dubai opera',\r\n      text: 'Discover World-Class Performances at Dubai Opera',\r\n      button: 'View Shows',\r\n      url: 'https://www.dubaiopera.com/en-US/products-list',\r\n    },\r\n\r\n{\r\n      src: '/banner3.webp',\r\n      alt: 'Banner for Music Stores',\r\n      text: 'Shop at Top Music Stores',\r\n      button: 'Checkout Stores',\r\n      url: '/music-store',\r\n    },\r\n\r\n \r\n\r\n    {\r\n      src: '/guitar-store.webp',\r\n      alt: 'Art of Guitar',\r\n      text: 'Art of Guitar',\r\n      button: 'View Store',\r\n      url: '/music-store/67afa3372272627033bafded',\r\n    },\r\n\r\n{\r\n      src: '/banner2.webp',\r\n      alt: 'Banner for Venues',\r\n      text: 'Discover Live Music Venues',\r\n      button: 'Explore Venues',\r\n      url: '#venues',\r\n      class: 'center',\r\n},    \r\n\r\n\r\n  ];\r\n\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const carouselRef = useRef();\r\n\r\n  // GSAP Animation\r\n  const animateSlide = (index) => {\r\n    const xOffset = `-${index * 100}%`;\r\n    gsap.to(carouselRef.current, {\r\n      x: xOffset,\r\n      duration: 3,\r\n      ease: 'power2.inOut',\r\n    });\r\n  };\r\n\r\n  // Auto-play\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      handleNext();\r\n    }, 4000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [currentIndex]);\r\n\r\n  // Next Slide\r\n  const handleNext = () => {\r\n    const nextIndex = (currentIndex + 1) % slides.length;\r\n    setCurrentIndex(nextIndex);\r\n    animateSlide(nextIndex);\r\n  };\r\n\r\n  // Previous Slide\r\n  const handlePrev = () => {\r\n    const prevIndex = (currentIndex - 1 + slides.length) % slides.length;\r\n    setCurrentIndex(prevIndex);\r\n    animateSlide(prevIndex);\r\n  };\r\n\r\n  // Handle Dot Clicks\r\n  const handleDotClick = (index) => {\r\n    setCurrentIndex(index);\r\n    animateSlide(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"carousel-container\">\r\n      <button className=\"carousel-arrow prev\" onClick={handlePrev}>&#10094;</button>\r\n      <div className=\"carousel-track\" ref={carouselRef}>\r\n        {slides.map((slide, index) => (\r\n          <div key={index} className=\"carousel-slide\">\r\n            <img src={slide.src} alt={slide.alt} className={slide.class} />\r\n            <h1 className=\"carousel-text\">{slide.text}</h1>\r\n            <a href={slide.url} className=\"carousel-btn enquirybtn\">\r\n              {slide.button}\r\n            </a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button className=\"carousel-arrow next\" onClick={handleNext}>&#10095;</button>\r\n      <div className=\"carousel-dots\">\r\n        {slides.map((_, index) => (\r\n          <span\r\n            key={index}\r\n            onClick={() => handleDotClick(index)}\r\n            className={`carousel-dot ${currentIndex === index ? 'active' : ''}`}\r\n          ></span>\r\n        ))}\r\n      </div>\r\n      <style jsx>{`\r\n        .carousel-arrow {\r\n          position: absolute;\r\n          top: 50%;\r\n          transform: translateY(-50%);\r\n          background: rgba(0, 0, 0, 0.5);\r\n          color: white;\r\n          border: none;\r\n          cursor: pointer;\r\n          font-size: 24px;\r\n          padding: 10px;\r\n          z-index: 10;\r\n        }\r\n\r\n        @media only screen and (max-width: 500px) {\r\n.carousel-arrow{\r\n    font-size: 14px;\r\n    padding: 6px;\r\n}\r\n\r\n      }\r\n        .prev {\r\n          left: 10px;\r\n        }\r\n\r\n        .next {\r\n          right: 10px;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { gsap } from \"gsap\";\nimport { Draggable } from \"gsap/Draggable\";\nimport { BsFillGeoAltFill } from \"react-icons/bs\";\nimport { BsChevronCompactRight, BsChevronCompactLeft } from \"react-icons/bs\";\nimport Banner from \"./Banner\";\nimport { Link } from \"react-router-dom\";\n//import WelcomeModal from \"./WelcomeModal\";\nimport \"./frontend.css\";\n\ngsap.registerPlugin(Draggable);\n\nconst Venues = ({ onNavigate }) => {\n  const [venues, setVenues] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const carouselRefs = useRef([]);\n\n  useEffect(() => {\n    const fetchVenues = async () => {\n      try {\n        const response = await axios.get(\n          `${process.env.REACT_APP_API_URL}/api/venues`\n        );\n        const publishedVenues = response.data.filter(\n          (venue) => venue.status === \"published\"\n        );\n        setVenues(publishedVenues);\n      } catch (error) {\n        setError(\"Failed to fetch venues. Please try again later.\");\n        console.error(\"Error fetching venues:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchVenues();\n  }, []);\n\n  const isMobile = () => window.innerWidth <= 500;\n\n  // Get current day name (e.g., \"Monday\", \"Tuesday\", etc.)\nconst getCurrentDay = () => {\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  return days[new Date().getDay()];\n};\n\n// Create the category order with current day first and following days in order\nconst getCategoryOrder = () => {\n  const currentDay = getCurrentDay();\n  const allDays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n  \n  // Find current day's position\n  const currentDayIndex = allDays.indexOf(currentDay);\n  \n  // Reorder array to start with current day\n  const reorderedDays = [\n    ...allDays.slice(currentDayIndex), // Days from current day to end\n    ...allDays.slice(0, currentDayIndex) // Days from start to before current day\n  ];\n  \n  // Keep \"Hot Picks\" first and add the reordered days\n  return [\"Hot Picks\", ...reorderedDays];\n};\n\nconst categoryOrder = getCategoryOrder();\n\n  // Function to group venues by category and sort them by orderNumber\n  const groupVenuesByCategory = () => {\n    const groupedVenues = {};\n\n    venues.forEach((venue) => {\n      if (!groupedVenues[venue.category]) {\n        groupedVenues[venue.category] = [];\n      }\n      groupedVenues[venue.category].push(venue);\n    });\n\n    // Sort venues within each category by orderNumber\n    Object.keys(groupedVenues).forEach((category) => {\n      groupedVenues[category].sort((a, b) => {\n        const orderA = Number(a.orderNumber || 0);\n        const orderB = Number(b.orderNumber || 0);\n        return orderA - orderB;\n      });\n    });\n\n    const orderedGroupedVenues = {};\n    categoryOrder.forEach((category) => {\n      if (groupedVenues[category]) {\n        orderedGroupedVenues[category] = groupedVenues[category];\n      }\n    });\n\n    return orderedGroupedVenues;\n  };\n\n  const groupedVenues = groupVenuesByCategory();\n\n  const scrollCarousel = (direction, index) => {\n    const carousel = carouselRefs.current[index];\n    if (carousel) {\n      const item = carousel.querySelector(\".venueImage\");\n      const itemWidth = item ? item.clientWidth : 0;\n      const scrollAmount = itemWidth * 3;\n\n      let newScrollPosition = carousel.scrollLeft + scrollAmount * direction;\n      newScrollPosition = Math.max(\n        0,\n        Math.min(newScrollPosition, carousel.scrollWidth - carousel.clientWidth)\n      );\n\n      gsap.to(carousel, {\n        scrollLeft: newScrollPosition,\n        duration: 0.5,\n        ease: \"power2.out\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (isMobile()) {\n      carouselRefs.current.forEach((carousel) => {\n        if (carousel) {\n          gsap.killTweensOf(carousel);\n\n          Draggable.create(carousel, {\n            type: \"x\",\n            bounds: {\n              minX: -carousel.scrollWidth + carousel.clientWidth,\n              maxX: 0,\n            },\n            inertia: true,\n            throwProps: true,\n            edgeResistance: 0.65,\n            onThrowUpdate: () => {\n              gsap.to(carousel, { x: carousel._gsap.x, ease: \"power2.out\" });\n            },\n            snap: {\n              x: (value) => Math.round(value / 16.67) * 200,\n            },\n          });\n        }\n      });\n    }\n  }, [groupedVenues]);\n\n  const handleClick = (venue) => {\n    if (onNavigate) {\n      onNavigate(`/venuedetail/${venue._id}`);\n    }\n  };\n\n  return (\n    <div className=\"bg-custom\">\n    {/*  <WelcomeModal /> */}\n\n      <div className=\"container-fluid p-0\">\n        <Banner />\n\n        {Object.keys(groupedVenues).map((category, index) => {\n          const carousel = carouselRefs.current[index];\n          const isScrollable =\n            carousel && carousel.scrollWidth > carousel.clientWidth;\n          const isCurrentDay = category === getCurrentDay();\n\n          return (\n            <div key={category} className=\"category-wrapper\">\n              <div className=\"div mb-2\">\n                <h2 className=\"my-2 fav-title\">\n                  {category}\n                  {isCurrentDay && <span className=\"today-badge\">Today</span>}\n                </h2>\n                <hr />\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col p-relative\">\n                  {isScrollable && (\n                    <button\n                      className=\"arrow left react-multiple-carousel__arrow react-multiple-carousel__arrow--left\"\n                      onClick={() => scrollCarousel(-1, index)}\n                    >\n                      <BsChevronCompactLeft />\n                    </button>\n                  )}\n                  <div\n                    className=\"venueCarousel\"\n                    ref={(el) => (carouselRefs.current[index] = el)}\n                    style={{\n                      display: \"flex\",\n                      overflow: \"hidden\",\n                      width: \"100%\",\n                    }}\n                  >\n                    {groupedVenues[category].map((venue) => (\n                      <div\n                        key={venue._id}\n                        className=\"venueImage\"\n                        style={{ flex: \"0 0 16.67%\", padding: \"0 5px\" }}\n                      >\n                        <div onClick={() => handleClick(venue)}>\n                          <div className=\"artistImage\">\n                            {venue.featuredImage ? (\n                              <img\n                                src={`${process.env.REACT_APP_API_URL}/${venue.featuredImage}`}\n                                alt={venue.title}\n                                width=\"100%\"\n                                loading=\"lazy\"\n                              />\n                            ) : (\n                              <div className=\"image-placeholder\"></div>\n                            )}\n                            {venue.isNew && (\n                              <span className=\"newLabel\">Recently Added</span>\n                            )}\n                            <div className=\"artContent\">\n                              <h4 className=\"artTitle\">{venue.title}</h4>\n                              {venue.location && (\n                                <span className=\"location\">\n                                  <BsFillGeoAltFill /> {venue.location}\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  {isScrollable && (\n                    <button\n                      className=\"arrow right react-multiple-carousel__arrow react-multiple-carousel__arrow--right\"\n                      onClick={() => scrollCarousel(1, index)}\n                    >\n                      <BsChevronCompactRight />\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Venues;\n"],"names":["Banner","slides","src","alt","text","button","url","class","currentIndex","setCurrentIndex","useState","carouselRef","useRef","animateSlide","index","xOffset","gsap","to","current","x","duration","ease","useEffect","interval","setInterval","handleNext","clearInterval","nextIndex","length","_jsxs","className","children","_jsx","onClick","handlePrev","prevIndex","ref","map","slide","href","_","handleDotClick","jsx","registerPlugin","Draggable","_ref","onNavigate","venues","setVenues","loading","setLoading","error","setError","carouselRefs","async","publishedVenues","axios","get","data","filter","venue","status","console","fetchVenues","getCurrentDay","Date","getDay","categoryOrder","getCategoryOrder","currentDay","allDays","currentDayIndex","indexOf","slice","groupedVenues","groupVenuesByCategory","forEach","category","push","Object","keys","sort","a","b","Number","orderNumber","orderedGroupedVenues","scrollCarousel","direction","carousel","item","querySelector","scrollAmount","clientWidth","newScrollPosition","scrollLeft","Math","max","min","scrollWidth","window","innerWidth","killTweensOf","create","type","bounds","minX","maxX","inertia","throwProps","edgeResistance","onThrowUpdate","_gsap","snap","value","round","isScrollable","isCurrentDay","BsChevronCompactLeft","el","style","display","overflow","width","flex","padding","_id","handleClick","featuredImage","title","isNew","location","BsFillGeoAltFill","BsChevronCompactRight"],"sourceRoot":""}